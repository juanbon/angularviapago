import {
  FormTemplate,
  ACTION_FORM,
} from 'src/app/modules/group_beta/shared/dynamic/dynamic-form/model/form-template';
import { FieldBase } from 'src/app/modules/group_beta/shared/dynamic/dynamic-form/model/field-base';

// URLs
let urls = {
  search: 'users',
  get: 'usersIdentities/',
  post: 'usersIdentities/',
  put: 'usersIdentities/',
};

// FieldsEdit
let fieldsEdit = [
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'cuit',
    label: '',
    type: 'number',
    value: '',
    order: 5,
    readonly: false,
    
  }),
  new FieldBase<any>({
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'id',
    label: '',
    type: 'hidden',
    value: '',
    order: 101,
    showLabel: false,
    readonly: true,
  }),
  new FieldBase<any>({
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'name',
    label: '',
    type: 'hidden',
    value: '',
    order: 100,
    showLabel: false,
    readonly: true,
  }),
  new FieldBase<any>({
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'userId',
    label: '',
    type: 'hidden',
    value: '',
    order: 1,
    showLabel: false,
    readonly: true,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'firstName',
    label: '',
    type: 'text',
    value: '',
    order: 4,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'lastName',
    label: '',
    type: 'text',
    value: '',
    order: 3,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'select',
    key: 'type',
    label: '',
    type: 'select',
    options: [
      { key: 'personal', value: 'personal' },
      { key: 'business', value: 'business' },
    ],
    value: '',
    order: 2,
    readonly: true,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'select',
    key: 'subtype',
    label: '',
    type: 'select',
    options: [{ key: 'basic', value: 'basic' }],
    value: '',
    order: 9,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'checkbox',
    key: 'feeExempt',
    label: '',
    type: 'bools',
    // options: [{key:'uno', value:'uno'}],
    value: 'false',
    order: 6,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'checkbox',
    key: 'taxExempt',
    label: '',
    type: 'bools',
    // options: [{key:'uno', value:'uno'}],
    value: '',
    order: 7,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'select',
    key: 'status',
    label: '',
    type: 'select',
    options: [
      { key: 'pending', value: 'pending' },
      { key: 'enable', value: 'enable' },
      { key: 'disable', value: 'disable' },
      { key: 'error', value: 'error' },
    ],
    value: '0',
    order: 8,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'textarea',
    key: 'notes',
    label: '',
    type: 'textarea',
    value: '',
    order: 15,
    readonly: false,
  }),
];

// FieldsSave
let fieldsSave = [
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'cuit',
    label: '',
    type: 'number',
    value: '',
    order: 5,
    readonly: false,

  }),
  new FieldBase<any>({
    required: false,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'id',
    label: '',
    type: 'hidden',
    value: '',
    order: 101,
    showLabel: false,
    readonly: true,
  }),
  new FieldBase<any>({
    required: false,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'name',
    label: '',
    type: 'hidden',
    value: '',
    order: 100,
    showLabel: false,
    readonly: true,
  }),
  new FieldBase<any>({
    required: false,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'userId',
    label: '',
    type: 'hidden',
    value: '',
    order: 1,
    showLabel: false,
    readonly: true,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'name',
    label: '',
    type: 'text',
    value: '',
    order: 4,
    readonly: false,
    pattern: '^[a-zA-Zs]*$',
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'firstName',
    label: '',
    type: 'hidden',
    value: '',
    order: 24,
    readonly: false,
    pattern: '^[a-zA-Zs]*$',
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'lastName',
    label: '',
    type: 'hidden',
    value: '',
    order: 23,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'select',
    key: 'type',
    label: '',
    type: 'select',
    options: [
      { key: 'personal', value: 'personal' },
      { key: 'business', value: 'business' },
    ],
    value: 'business',
    order: 2,
    readonly: true,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'select',
    key: 'subtype',
    label: '',
    type: 'select',
    options: [{ key: 'basic', value: 'basic' }],
    value: 'basic',
    order: 9,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'checkbox',
    key: 'feeExempt',
    label: '',
    type: 'bools',
    // options: [{key:'uno', value:'uno'}],
    value: false,
    order: 6,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'checkbox',
    key: 'taxExempt',
    label: '',
    type: 'bools',
    // options: [{key:'uno', value:'uno'}],
    value: false,
    order: 7,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'select',
    key: 'status',
    label: '',
    type: 'hidden',
    options: [
      { key: 'pending', value: 'pending' },
      { key: 'enable', value: 'enable' },
      { key: 'disable', value: 'disable' },
      { key: 'error', value: 'error' },
    ],
    value: 'pending',
    order: 8,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'textarea',
    key: 'notes',
    label: '',
    type: 'textarea',
    value: '',
    order: 15,
    readonly: false,
  }),
];

// Configuraci贸n Editar
const ConfigSave: FormTemplate = {
  title: 'Identidad',
  action: ACTION_FORM.SAVE,
  post_url: urls.post,
  show_url: urls.get,
  id: '',
  fields: fieldsSave,
};

// {
//   "id": null,
//   "userId": "846617b6-77ab-48d1-a410-8ae758757d20",
//   "status": "pending",
//   "type": "business",
//   "subtype": "basic",
//   "lastName": null,
//   "firstName": null,
//   "name": "Persona23",
//   "notes": "test",
//   "cuit": "33123456789",
//   "feeExempt": false,
//   "taxExempt": false
// }

// Configuraci贸n
const ConfigEdit: FormTemplate = {
  title: 'Identidad',
  action: ACTION_FORM.EDIT,
  post_url: urls.post,
  show_url: urls.get,
  id: '',
  fields: fieldsEdit,
};

export const ConfigurationIden: FormTemplate[] = [ConfigEdit, ConfigSave];

export const Search = [
  {
    property: { es: 'Ordenar por', en: 'order' },
    match: [
      { label: { es: 'Nombre', en: 'name' } },
      { label: { es: 'Fecha de actualizaci贸n', en: 'updatedAt' } },
      { label: { es: 'Fecha de creaci贸n', en: 'createdAt' } },
    ],
    value: 'name',
  },
  {
    property: { es: 'Estado', en: 'state' },
    match: [
      { label: { es: 'Pendiente', en: 'pending' } },
      { label: { es: 'Habilitado', en: 'enable' } },
      { label: { es: 'Deshabilitado', en: 'disable' } },
    ],
    value: '',
  },
];
