import {
  FormTemplate,
  ACTION_FORM,
} from 'src/app/modules/group_beta/shared/dynamic/dynamic-form/model/form-template';
import { FieldBase } from 'src/app/modules/group_beta/shared/dynamic/dynamic-form/model/field-base';

// URLs
let urls = {
  search: 'transactions',
  get: 'transactions/',
  post: 'transactions/',
  put: 'transactions/',
};

// fieldsShow
let fieldsShow = [
  new FieldBase<any>({
    showLabel: false,
    required: true,
    url: '',
    text: 'false',
    controlType: 'title',
    key: 'humanType',
    label: 'false',
    type: 'title',
    value: 'title',
    order: 1,
    readonly: false,
  }),
  new FieldBase<any>({
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'id',
    label: '',
    type: 'hidden',
    value: '',
    order: 101,
    showLabel: false,
    readonly: true,
  }),
  new FieldBase<any>({
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'status',
    label: 'title',
    type: 'subtitle',
    value: 'title',
    order: 2,
    showLabel: true,
    readonly: true,
  }),
  new FieldBase<any>({
    required: true,
    url: '',
    text: '',
    controlType: 'datetime',
    key: 'date',
    label: 'Fecha',
    type: 'time',
    value: '',
    order: 3,
    showLabel: true,
    readonly: true,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'number',
    key: 'number',
    label: 'Número',
    type: 'text',
    value: '',
    order: 4,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'sourceName',
    label: 'Nombre',
    type: 'hidden',
    value: '',
    order: 8,
    readonly: false,
  }),
  //   new FieldBase<any>({
  //     showLabel: true,
  //     required: true,
  //     url: '',
  //     text: '',
  //     controlType: 'select',
  //     key: 'type',
  //     label: '',
  //     type: 'select',
  //     options: [
  //         {key:'personal', value:'personal'},
  //         {key:'business', value:'business'}
  // ],
  //     value: '',
  //     order: 2,
  //     readonly: true
  //   }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'select',
    key: 'sourceUser',
    label: 'Usuario',
    type: 'object',
    options: [{ key: 'image', value: 'image' }],
    value: '',
    order: 9,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'sourceCvu',
    label: 'CVU',
    type: 'text',
    // options: [{key:'uno', value:'uno'}],
    value: '',
    order: 11,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'sourceIdentity',
    label: 'Identidad',
    type: 'object',
    // options: [{key:'uno', value:'uno'}],
    value: '',
    order: 10,
    readonly: false,
  }),
  // new FieldBase<any>({
  //   showLabel: true,
  //   required: false,
  //   url: '',
  //   text: '',
  //   controlType: 'select',
  //   key: 'status',
  //   label: '',
  //   type: 'select',
  //    options: [
  //       {key:'pending', value:'pending'},
  //       {key:'enable', value:'enable'},
  //       {key:'disable', value:'disable'},
  //       {key:'error', value:'error'},

  //   ],
  //   value: '0',
  //   order: 8,
  //   readonly: false
  // }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'sourceAlias',
    label: 'Alias',
    type: 'text',
    value: '',
    order:12,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'sourceCuit',
    label: 'CUIT',
    type: 'text',
    value: '',
    order: 13,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'sourceAccount',
    label: 'Cuenta',
    type: 'objectChild',
    value: '',
    order: 14,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'targetUser',
    label: 'Usuario',
    type: 'object',
    // options: [{key:'uno', value:'uno'}],
    value: '',
    order: 17,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'targetIdentity',
    label: 'Identidad',
    type: 'object',
    // options: [{key:'uno', value:'uno'}],
    value: '',
    order: 18,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'targetCvu',
    label: 'CVU',
    type: 'text',
    value: '',
    order: 19,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'targetAlias',
    label: 'Alias',
    type: 'text',
    value: '',
    order: 20,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'targetCuit',
    label: 'CUIT',
    type: 'text',
    value: '',
    order: 21,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'targetAccount',
    label: 'Cuenta',
    type: 'objectChild',
    value: '',
    order: 22,
    readonly: false,
  }),

  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'gireId',
    label: 'ID Gire',
    type: 'text',
    value: '',
    order: 24,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'reference',
    label: 'Referencia',
    type: 'text',
    value: '',
    order: 25,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'reason',
    label: 'Motivo',
    type: 'text',
    value: '',
    order: 26,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'coelsaId',
    label: 'ID Coelsa',
    type: 'text',
    value: '',
    order: 27,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'code',
    label: 'Código',
    type: 'text',
    value: '',
    order: 28,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: 'Fecha de creación',
    controlType: 'datetime',
    key: 'createdAt',
    label: 'Fecha de creación',
    type: 'time',
    value: '',
    order: 6,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'amount',
    label: 'Monto',
    type: 'price',
    value: '',
    order: 5,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'datetime',
    key: 'updatedAt',
    label: 'Fecha de actualización',
    type: 'time',
    value: '',
    order: 7,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'ticket',
    label: 'Ticket',
    type: 'text',
    value: '',
    order: 31,
    readonly: false,
  }),

  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'currentBalance',
    label: 'Saldo',
    type: 'price',
    value: '',
    order: 15,
    readonly: false,
  }),

  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'text',
    key: 'targetCurrentBalance',
    label: 'Saldo',
    type: 'price',
    value: '',
    order: 23,
    readonly: false,
  }),

];

// FieldsSave
let fieldsSave = [
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'cuit',
    label: '',
    type: 'title',
    value: '',
    order: 5,
    readonly: false,
  }),
  new FieldBase<any>({
    required: false,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'id',
    label: '',
    type: 'hidden',
    value: '',
    order: 101,
    showLabel: false,
    readonly: true,
  }),
  new FieldBase<any>({
    required: false,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'name',
    label: '',
    type: 'hidden',
    value: '',
    order: 100,
    showLabel: false,
    readonly: true,
  }),
  new FieldBase<any>({
    required: false,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'userId',
    label: '',
    type: 'hidden',
    value: '',
    order: 1,
    showLabel: false,
    readonly: true,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'firstName',
    label: '',
    type: 'text',
    value: '',
    order: 4,
    readonly: false,
    pattern: '^[a-zA-Zs]*$',
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'textbox',
    key: 'lastName',
    label: '',
    type: 'text',
    value: '',
    order: 3,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'select',
    key: 'type',
    label: '',
    type: 'select',
    options: [
      { key: 'personal', value: 'personal' },
      { key: 'business', value: 'business' },
    ],
    value: 'business',
    order: 2,
    readonly: true,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: true,
    url: '',
    text: '',
    controlType: 'select',
    key: 'subtype',
    label: '',
    type: 'select',
    options: [{ key: 'basic', value: 'basic' }],
    value: 'basic',
    order: 9,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'checkbox',
    key: 'feeExempt',
    label: '',
    type: 'bools',
    // options: [{key:'uno', value:'uno'}],
    value: false,
    order: 6,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'checkbox',
    key: 'taxExempt',
    label: '',
    type: 'bools',
    // options: [{key:'uno', value:'uno'}],
    value: false,
    order: 7,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'select',
    key: 'status',
    label: '',
    type: 'hidden',
    options: [
      { key: 'pending', value: 'pending' },
      { key: 'enable', value: 'enable' },
      { key: 'disable', value: 'disable' },
      { key: 'error', value: 'error' },
    ],
    value: 'pending',
    order: 8,
    readonly: false,
  }),
  new FieldBase<any>({
    showLabel: true,
    required: false,
    url: '',
    text: '',
    controlType: 'textarea',
    key: 'notes',
    label: '',
    type: 'textarea',
    value: '',
    order: 15,
    readonly: false,
  }),
];

let postFields: never[] = [];

// Configuración Editar
const ConfigSave: FormTemplate = {
  title: 'Transacción',
  action: ACTION_FORM.SAVE,
  post_url: urls.post,
  show_url: urls.get,
  id: '',
  fields: fieldsSave,
};

// Configuración
const ConfigShow: FormTemplate = {
  title: 'Transacción',
  action: ACTION_FORM.SHOW,
  post_url: urls.post,
  show_url: urls.get,
  id: '',
  fields: fieldsShow,
};

export const ConfigurationTransaccion: FormTemplate[] = [
  ConfigShow,
  ConfigSave,
];

export const Search = [
  {
    property: { es: 'Ordenar por', en: 'order' },
    match: [
      { label: { es: 'Nombre', en: 'name' } },
      { label: { es: 'Fecha de actualización', en: 'updatedAt' } },
      { label: { es: 'Fecha de creación', en: 'createdAt' } },
    ],
    value: 'name',
  },
  {
    property: { es: 'Estado', en: 'state' },
    match: [
      { label: { es: 'Pendiente', en: 'pending' } },
      { label: { es: 'En proceso', en: 'process' } },
      { label: { es: 'Confirmada', en: 'confirm' } },
      { label: { es: 'Devuelta', en: 'reverse' } },
      { label: { es: 'Anulada', en: 'cancel' } },
      { label: { es: 'Con error', en: 'error' } },
    ],
    value: '',
  },
];

export const Log = [
  {
    name: 'transiciones',
    view: ['transiciones', 'createdAt', 'user', 'initialStatus', 'finalStatus'],
  },
  {
    name: 'trana',
    view: ['transiciones', 'createdAt', 'user', 'initialStatus', 'finalStatus'],
  },
];
