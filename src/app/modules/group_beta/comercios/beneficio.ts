import {
  FormTemplate,
  ACTION_FORM,
} from 'src/app/modules/group_beta/shared/dynamic/dynamic-form/model/form-template';
import { FieldBase } from 'src/app/modules/group_beta/shared/dynamic/dynamic-form/model/field-base';

// URLs
let urls = {
  search: 'benefits',
  get: 'benefits/',
  post: 'benefits/',
  put: 'benefits/',
};

// fieldsEdit
let fieldsEdit = [ 
  new FieldBase<any>({
  required: false,
  url: '',
  text: '',
  controlType: 'textbox',
  key: 'id',
  label: '',
  type: 'hidden',
  value: '',
  order: 101,
  showLabel: false,
  readonly: true,
}),
new FieldBase<any>({
  required: false,
  url: '',
  text: '',
  controlType: 'textbox',
  key: 'storeId',
  label: '',
  type: 'hidden',
  value: 'aaaaa',
  order: 110,
  showLabel: false,
  readonly: true,
}),

new FieldBase<any>({
  required: true,
  url: '',
  text: '',
  controlType: 'textbox',
  key: 'name',
  label: '',
  type: 'text',
  value: '',
  order: 1,
  showLabel: true,
  readonly: false,
  pattern: '.{2,}',
}),
new FieldBase<any>({
  required: true,
  url: '',
  text: '',
  controlType: 'select',
  key: 'status',
  label: '',
  type: 'select',
  options: [
    { key: 'enable', value: 'enable' },
    { key: 'disable', value: 'disable' },
  ],
  value: 'enable',
  order: 2,
  showLabel: true,
  readonly: false,
}),

new FieldBase<any>({
  showLabel: true,
  required: true,
  url: '',
  text: '',
  controlType: 'text',
  key: 'shortDescription',
  label: '',
  type: 'text',
  value: '',
  order: 3,
  readonly: false,
  pattern: '',
}),

new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'text',
  key: 'longDescription',
  label: '',
  type: 'text',
  value: '',
  order: 4,
  readonly: false,
  pattern: '.{2,}',
}),
new FieldBase<any>({
  required: true,
  url: '',
  text: '',
  controlType: 'select',
  key: 'type',
  label: '',
  type: 'selectWLabel',
  options: [
    { key: 'amount', value: 'monto' },
    { key: 'percent', value: 'porcentaje' },
  ],
  value: 'amount',
  order: 5,
  showLabel: true,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: false,
  required: true,
  url: '',
  text: '',
  controlType: 'number',
  key: 'value',
  label: '',
  type: 'inputWLabel',
  value: '',
  order: 6,
  readonly: false,
  pattern: '',
}),
new FieldBase<any>({
  showLabel: true,
  required: true,
  url: '',
  text: '',
  controlType: 'date',
  key: 'validFrom',
  label: '',
  type: 'dateMin',
  value: '',
  order: 7,
  readonly: false,
  pattern: '',
}),
new FieldBase<any>({
  showLabel: true,
  required: true,
  url: '',
  text: '',
  controlType: 'date',
  key: 'validTo',
  label: '',
  type: 'dateMax',
  value: '',
  order: 8,
  readonly: false,
  pattern: '',
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'text',
  key: 'notes',
  label: 'Notas',
  type: 'text',
  value: '',
  order: 20,
  readonly: false,
  pattern: '^[A-Za-z0-9]{1,}.+',
}),

new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validSunday',
  label: '',
  type: 'bools',
  value: true,
  order: 9,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validMonday',
  label: '',
  type: 'bools',
  value: true,
  order: 10,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validTuesday',
  label: '',
  type: 'bools',
  value: true,
  order: 11,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validWednesday',
  label: '',
  type: 'bools',
  value: true,
  order: 12,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validThursday',
  label: '',
  type: 'bools',
  value: true,
  order: 13,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validFriday',
  label: '',
  type: 'bools',
  value: true,
  order: 14,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validSaturday',
  label: '',
  type: 'bools',
  value: true,
  order: 15,
  readonly: false,
}),
];

// fieldsShow
let fieldsShow = [
  new FieldBase<any>({
    // required: true,
    // url: '',
    // text: '',
    // controlType: 'textbox',
    // key: 'id',
    // label: '',
    // type: 'hidden',
    // value: '',
    // order: 101,
    // showLabel: false,
    // readonly: true,
  }),
  //   new FieldBase<any>({
  //     required: false,
  //     url: '',
  //     text: '',
  //     controlType: 'textbox',
  //     key: 'userId',
  //     label: '',
  //     type: 'hidden',
  //     value: '',
  //     order: 110,
  //     showLabel: false,
  //     readonly: true,

  //   }),
];

//fieldsSave
let fieldsSave = [ 
  new FieldBase<any>({
  required: false,
  url: '',
  text: '',
  controlType: 'textbox',
  key: 'id',
  label: '',
  type: 'hidden',
  value: '',
  order: 101,
  showLabel: false,
  readonly: true,
}),
new FieldBase<any>({
  required: false,
  url: '',
  text: '',
  controlType: 'textbox',
  key: 'storeId',
  label: '',
  type: 'hidden',
  value: 'aaaaa',
  order: 110,
  showLabel: false,
  readonly: true,
}),

new FieldBase<any>({
  required: true,
  url: '',
  text: '',
  controlType: 'textbox',
  key: 'name',
  label: '',
  type: 'text',
  value: '',
  order: 1,
  showLabel: true,
  readonly: false,
  pattern: '.{2,}',
}),
new FieldBase<any>({
  required: true,
  url: '',
  text: '',
  controlType: 'select',
  key: 'status',
  label: '',
  type: 'select',
  options: [
    { key: 'enable', value: 'enable' },
    { key: 'disable', value: 'disable' },
  ],
  value: 'enable',
  order: 2,
  showLabel: true,
  readonly: false,
}),

new FieldBase<any>({
  showLabel: true,
  required: true,
  url: '',
  text: '',
  controlType: 'text',
  key: 'shortDescription',
  label: '',
  type: 'text',
  value: '',
  order: 3,
  readonly: false,
  pattern: '',
}),

new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'text',
  key: 'longDescription',
  label: '',
  type: 'text',
  value: '',
  order: 4,
  readonly: false,
  pattern: '.{2,}',
}),
new FieldBase<any>({
  required: true,
  url: '',
  text: '',
  controlType: 'select',
  key: 'type',
  label: '',
  type: 'selectWLabel',
  options: [
    { key: 'amount', value: 'monto' },
    { key: 'percent', value: 'porcentaje' },
  ],
  value: 'amount',
  order: 5,
  showLabel: true,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: false,
  required: true,
  url: '',
  text: '',
  controlType: 'number',
  key: 'value',
  label: '',
  type: 'inputWLabel',
  value: '',
  order: 6,
  readonly: false,
  pattern: '',
}),
new FieldBase<any>({
  showLabel: true,
  required: true,
  url: '',
  text: '',
  controlType: 'date',
  key: 'validFrom',
  label: '',
  type: 'dateMin',
  value: '',
  order: 7,
  readonly: false,
  pattern: '',
}),
new FieldBase<any>({
  showLabel: true,
  required: true,
  url: '',
  text: '',
  controlType: 'date',
  key: 'validTo',
  label: '',
  type: 'dateMax',
  value: '',
  order: 8,
  readonly: false,
  pattern: '',
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'text',
  key: 'notes',
  label: 'Notas',
  type: 'text',
  value: '',
  order: 20,
  readonly: false,
  pattern: '^[A-Za-z0-9]{1,}.+',
}),

new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validSunday',
  label: '',
  type: 'bools',
  value: true,
  order: 9,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validMonday',
  label: '',
  type: 'bools',
  value: true,
  order: 10,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validTuesday',
  label: '',
  type: 'bools',
  value: true,
  order: 11,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validWednesday',
  label: '',
  type: 'bools',
  value: true,
  order: 12,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validThursday',
  label: '',
  type: 'bools',
  value: true,
  order: 13,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validFriday',
  label: '',
  type: 'bools',
  value: true,
  order: 14,
  readonly: false,
}),
new FieldBase<any>({
  showLabel: true,
  required: false,
  url: '',
  text: '',
  controlType: 'checkbox',
  key: 'validSaturday',
  label: '',
  type: 'bools',
  value: true,
  order: 15,
  readonly: false,
}),
];

// Configuración Mostrar
const ConfigShow: FormTemplate = {
  title: 'Beneficio',
  action: ACTION_FORM.SHOW,
  post_url: urls.post,
  show_url: urls.get,
  id: '',
  fields: fieldsShow,
};

// Configuración Editar
const ConfigEdit: FormTemplate = {
  title: 'Beneficio',
  action: ACTION_FORM.EDIT,
  post_url: urls.post,
  show_url: urls.get,
  id: '',
  fields: fieldsEdit,
};

// Configuración Save
const ConfigSave: FormTemplate = {
  title: 'Beneficio',
  action: ACTION_FORM.SAVE,
  post_url: urls.post,
  show_url: urls.get,
  id: '',
  fields: fieldsSave,
};

export const ConfigurationBeneficio: FormTemplate[] = [
  ConfigShow,
  ConfigEdit,
  ConfigSave,
];

export const Search = [
  // {
  //   "property": {"es": "Ordenar por", "en": "order"},
  //   "match": [
  //     {"label": {"es": "Nombre", "en": "name"}},
  //     {"label": {"es": "Fecha de actualización", "en": "updatedAt"}},
  //     {"label": {"es": "Fecha de creación", "en": "createdAt"}}
  //   ],
  //   "value": "name"
  // },
];
